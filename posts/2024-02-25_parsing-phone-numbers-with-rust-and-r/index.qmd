---
title: "Parsing phone numbers with Rust and R"
author:
  - name: David Schoch
    orcid: 0000-0003-2952-4812
date: 2024-02-25
categories: [R,Rust]
---

On my bucket list for 2024 is to learn a bit of Rust. After reading (well skimming...) [THE BOOK](https://doc.rust-lang.org/book/) and doing a [few experiments](https://github.com/schochastics/rust_playground), I wanted to give it a try to incorporate some Rust code in an R package. For no particular reason, I chose to wrap the [phonenumber](https://crates.io/crates/phonenumber) crate to parse phonenumbers into R. Note that there is already an R package for that, called [dialr](https://github.com/socialresearchcentre/dialr), which wraps Google's [libphonenumber](https://github.com/google/libphonenumber) Java library. For obvious reasons, my experimental package is called [dialrs](https://github.com/schochastics/dialrs). 

![](dialrs.png){width=350px fig-align="center"}

As a small disclaimer, I am far from being an expert with Rust, so don't take this post as a tutorial and an example of best practices in Rust!

## Setup

Setting up a package for Rust code is extremely simple. All you need is the [rextendr](https://github.com/extendr/rextendr) package which allows to call Rust code from R. [A vignette](https://extendr.github.io/rextendr/articles/package.html) explains how to use it within an R package. 

Two commands are enough to get you started with a package.
```r
usethis::create_package("dialrs")
rextendr::use_extendr()
```
The function `use_extendr()` creates a whole bunch of files and directories (see the vignette for help). The most important ones are `src/rust/Cargo.toml` to include crates as dependencies and `src/rust/src/lib.rs` where most of the Rust code will live. You can also have the code in different files, say `phone.rs`, but then there needs to be a line

```rust
mod phone
```

in `libs.rs`.  
To compile the code, we need to run `rextendr::document()` (similar to `devtools::document()`)
